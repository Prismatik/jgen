{
  "$schema": "http://json-schema.org/draft-04/hyper-schema",
  "definitions": {
    "db_transaction": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "DB_Transaction - DB_Transaction",
      "description": "The database representation of a transaction",
      "definitions": {
        "persisted_at": {
          "description": "When the document was persisted to the database.",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "type": [
            "string"
          ]
        },
        "qantas_reference": {
          "description": "Unique ID to reference transactions in qantas files",
          "example": "1c3af482",
          "type": [
            "string"
          ]
        }
      },
      "properties": {
        "id": {
          "$ref": "#/definitions/transaction/definitions/id"
        },
        "order_id": {
          "$ref": "#/definitions/transaction/definitions/order_id"
        },
        "category": {
          "$ref": "#/definitions/transaction/definitions/category"
        },
        "member": {
          "$ref": "#/definitions/transaction/definitions/member"
        },
        "transaction_date": {
          "$ref": "#/definitions/transaction/definitions/transaction_date"
        },
        "product_description": {
          "$ref": "#/definitions/transaction/definitions/product_description"
        },
        "payment": {
          "$ref": "#/definitions/transaction/definitions/payment"
        },
        "points": {
          "$ref": "#/definitions/transaction/definitions/points"
        },
        "cinema": {
          "$ref": "#/definitions/transaction/definitions/cinema"
        },
        "vouchers": {
          "$ref": "#/definitions/transaction/definitions/vouchers"
        },
        "commission": {
          "$ref": "#/definitions/transaction/definitions/commission"
        },
        "delivery": {
          "$ref": "#/definitions/transaction/definitions/delivery"
        },
        "persisted_at": {
          "$ref": "#/definitions/db_transaction/definitions/persisted_at"
        },
        "qantas_reference": {
          "$ref": "#/definitions/db_transaction/definitions/qantas_reference"
        }
      },
      "type": [
        "object"
      ]
    },
    "member": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Member - Members",
      "description": "A QANTAS Frequent Flyer member",
      "properties": {
        "name": {
          "$ref": "#/definitions/name"
        },
        "email": {
          "description": "Email address of the FF member",
          "example": "nickjones@example.com",
          "format": "email",
          "type": [
            "string"
          ],
          "maxLength": 100
        },
        "ff_number": {
          "description": "Frequent Flyer number",
          "example": 1234567891234567,
          "format": "email",
          "type": [
            "integer"
          ],
          "minimum": 0,
          "maximum": 9999999999999999
        }
      },
      "type": [
        "object"
      ]
    },
    "name": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Name - Names",
      "description": "A QANTAS Frequent Flyer member's name",
      "properties": {
        "surname": {
          "description": "surname of the FF member associated with the transaction",
          "example": "Jones",
          "type": [
            "string"
          ],
          "maxLength": 40
        },
        "initial": {
          "description": "first initial of the FF member associated with the transaction",
          "example": "N",
          "type": [
            "string"
          ]
        },
        "salutation": {
          "description": "Title of the FF member",
          "example": "Mr",
          "type": [
            "string"
          ]
        }
      },
      "type": [
        "object"
      ]
    },
    "transaction": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Transaction - Transactions",
      "definitions": {
        "id": {
          "description": "internal unique identifier of Transaction",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "format": "uuid",
          "type": [
            "string"
          ]
        },
        "order_id": {
          "description": "unique identifier of the order this transaction is associated with",
          "example": "01234567-89ab-cdef-0123-456789abcdef",
          "type": [
            "string"
          ]
        },
        "category": {
          "description": "Type of the transaction [P (Purchase), R (Refund)]",
          "example": "P",
          "options": [
            "P",
            "R"
          ],
          "type": [
            "string"
          ],
          "maxLength": 1
        },
        "member": {
          "$ref": "#/definitions/member"
        },
        "transaction_date": {
          "description": "when transaction was performed by the client",
          "example": "2012-01-01T12:00:00Z",
          "format": "date-time",
          "type": [
            "string"
          ]
        },
        "product_description": {
          "description": "descriptive text for the product being purchased",
          "example": "Movie vouchers",
          "type": [
            "string"
          ]
        },
        "payment": {
          "type": [
            "object"
          ],
          "properties": {
            "amount": {
              "type": [
                "number"
              ],
              "example": 40.0,
              "multipleOf": 0.01
            },
            "gst": {
              "type": [
                "number"
              ],
              "example": 4.0,
              "multipleOf": 0.01
            },
            "total": {
              "type": [
                "number"
              ],
              "example": 44.0,
              "multipleOf": 0.01
            },
            "card_type": {
              "type": [
                "string"
              ],
              "example": "Mastercard",
              "options": [
                "VISA",
                "Mastercard",
                "AMEX",
                "Diners"
              ]
            }
          }
        },
        "points": {
          "type": [
            "object"
          ],
          "properties": {
            "bonus": {
              "type": [
                "number"
              ],
              "example": 30,
              "maximum": 9999999,
              "minimum": -999999
            },
            "base": {
              "type": [
                "number"
              ],
              "example": 50,
              "maximum": 999999,
              "minimum": -99999
            }
          }
        },
        "cinema": {
          "type": [
            "object"
          ],
          "properties": {
            "provider": {
              "type": [
                "string"
              ],
              "example": "Hoyts",
              "maxLength": 80
            },
            "location": {
              "type": [
                "string"
              ],
              "example": "Hoyts Bondi Junction",
              "maxLength": 80
            }
          }
        },
        "vouchers": {
          "type": [
            "array"
          ],
          "items": {
            "$ref": "#/definitions/voucher"
          }
        },
        "commission": {
          "type": [
            "object"
          ],
          "properties": {
            "rate": {
              "type": [
                "number"
              ],
              "example": 30,
              "minimum": 0,
              "maximum": 100
            },
            "value": {
              "type": [
                "number"
              ],
              "example": 18.25,
              "multipleOf": 0.01
            }
          }
        },
        "delivery": {
          "type": [
            "object"
          ],
          "properties": {
            "gifted": {
              "type": [
                "boolean"
              ],
              "example": true
            },
            "giftee": {
              "type": [
                "string"
              ],
              "example": "Joe Bloggs",
              "maxLength": 80
            },
            "channel": {
              "description": "Whether the vouchers will be delivered by post (P) or email (E)",
              "type": [
                "string"
              ],
              "example": "P",
              "options": [
                "P",
                "E"
              ],
              "maxLength": 1
            },
            "address": {
              "type": [
                "object"
              ],
              "properties": {
                "line1": {
                  "type": [
                    "string"
                  ],
                  "example": "Building 1"
                },
                "line2": {
                  "type": [
                    "string"
                  ],
                  "example": "123 Fake St"
                },
                "suburb": {
                  "type": [
                    "string"
                  ],
                  "example": "Fakington"
                },
                "post_code": {
                  "type": [
                    "number"
                  ],
                  "example": 2000,
                  "minimum": 800,
                  "maximum": 7799
                },
                "city": {
                  "type": [
                    "string"
                  ],
                  "example": "Sydney"
                },
                "state": {
                  "example": "NSW",
                  "type": [
                    "string"
                  ],
                  "maxLength": 3,
                  "minLength": 2
                }
              }
            },
            "email": {
              "type": [
                "string"
              ],
              "format": "email",
              "example": "joebloggs@example.com"
            }
          }
        }
      },
      "description": "A Transaction occurs when an order is placed or a refund is processed.",
      "links": [
        {
          "description": "Create a new transaction.",
          "href": "/transaction",
          "method": "POST",
          "rel": "create",
          "schema": {
            "required": [
              "order_id",
              "category",
              "member",
              "transaction_date",
              "product_description",
              "payment",
              "points",
              "cinema",
              "vouchers",
              "commission",
              "delivery"
            ],
            "properties": {
              "id": {
                "$ref": "#/definitions/transaction/definitions/id"
              },
              "order_id": {
                "$ref": "#/definitions/transaction/definitions/order_id"
              },
              "category": {
                "$ref": "#/definitions/transaction/definitions/category"
              },
              "member": {
                "$ref": "#/definitions/transaction/definitions/member"
              },
              "transaction_date": {
                "$ref": "#/definitions/transaction/definitions/transaction_date"
              },
              "product_description": {
                "$ref": "#/definitions/transaction/definitions/product_description"
              },
              "payment": {
                "$ref": "#/definitions/transaction/definitions/payment"
              },
              "points": {
                "$ref": "#/definitions/transaction/definitions/points"
              },
              "cinema": {
                "$ref": "#/definitions/transaction/definitions/cinema"
              },
              "vouchers": {
                "$ref": "#/definitions/transaction/definitions/vouchers"
              },
              "commission": {
                "$ref": "#/definitions/transaction/definitions/commission"
              },
              "delivery": {
                "$ref": "#/definitions/transaction/definitions/delivery"
              }
            },
            "type": [
              "object"
            ]
          },
          "title": "Create"
        }
      ],
      "properties": {
        "id": {
          "$ref": "#/definitions/transaction/definitions/id"
        },
        "order_id": {
          "$ref": "#/definitions/transaction/definitions/order_id"
        },
        "category": {
          "$ref": "#/definitions/transaction/definitions/category"
        },
        "member": {
          "$ref": "#/definitions/transaction/definitions/member"
        },
        "transaction_date": {
          "$ref": "#/definitions/transaction/definitions/transaction_date"
        },
        "product_description": {
          "$ref": "#/definitions/transaction/definitions/product_description"
        },
        "payment": {
          "$ref": "#/definitions/transaction/definitions/payment"
        },
        "points": {
          "$ref": "#/definitions/transaction/definitions/points"
        },
        "cinema": {
          "$ref": "#/definitions/transaction/definitions/cinema"
        },
        "vouchers": {
          "$ref": "#/definitions/transaction/definitions/vouchers"
        },
        "commission": {
          "$ref": "#/definitions/transaction/definitions/commission"
        },
        "delivery": {
          "$ref": "#/definitions/transaction/definitions/delivery"
        }
      },
      "type": [
        "object"
      ]
    },
    "voucher": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "Voucher - Vouchers",
      "description": "An individual movie voucher",
      "properties": {
        "id": {
          "type": [
            "string"
          ],
          "example": "asd123"
        },
        "category": {
          "type": [
            "string"
          ],
          "example": "child",
          "options": [
            "adult",
            "child"
          ]
        },
        "expiry": {
          "example": "2012-01-01",
          "type": [
            "string"
          ],
          "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$"
        }
      },
      "type": [
        "object"
      ]
    }
  },
  "properties": {
    "db_transaction": {
      "$ref": "#/definitions/db_transaction"
    },
    "member": {
      "$ref": "#/definitions/member"
    },
    "name": {
      "$ref": "#/definitions/name"
    },
    "transaction": {
      "$ref": "#/definitions/transaction"
    },
    "voucher": {
      "$ref": "#/definitions/voucher"
    }
  },
  "type": [
    "object"
  ],
  "description": "The API for persisting transaction data from QANTAS/TLC",
  "id": "qantas-tlc-transaction-api",
  "links": [
    {
      "href": "https://localhost:3000",
      "rel": "self"
    }
  ],
  "title": "Transactions"
}
